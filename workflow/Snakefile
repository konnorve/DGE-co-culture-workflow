# The main entry point of your workflow.
# After configuring, running snakemake -n in a clone of this repository should successfully execute a dry-run of the workflow.
from pathlib import Path
import shutil

# report: "report/workflow.rst"


configfile: "config/config.yaml"


SAMPLES = glob_wildcards(
    Path(config["input"]["raw_reads"])
    # / "2019_dark_adapted_transcriptome_sequencing_{sample}.fastq.bz2"
    / "2021_Sar11Pro_RNAseq_Project_{sample}_1_sequence.fastq.gz"
).sample


rule all:
    input:
        Path(config["output"]["done_files"]) / "post_htseq2_parsing.done",
        expand(
            Path(config["output"]["fastqc"]) / "{sample}_{read}_trimmed_fastqc.html",
            sample=SAMPLES,
            read=[1, 2],
        ),


include: "rules/counting_features.smk"


include: "rules/genome_concat.smk"


include: "rules/gff_tools.smk"


assert not (config["use_bwa"] and config["use_hisat2"])

if config["use_hisat2"]:

    include: "rules/map_reads_hisat2.smk"


if config["use_bwa"]:

    include: "rules/map_reads_bwa.smk"


include: "rules/post_htseq2_parsing.smk"


include: "rules/run_trim.smk"


include: "rules/samtools.smk"


include: "rules/unzip.smk"


include: "rules/fastqc.smk"


onsuccess:
    shutil.rmtree(".snakemake")
